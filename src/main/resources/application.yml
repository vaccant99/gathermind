


spring:
  profiles:
    active: local
    group:
      local: local, common
      blue: blue, common
      green: green, common



server:
  env: blue

---

spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
          github:
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}" # Callback URL
          kakao: # 카카오 추가
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"

server:
  port: 8080  # 서버 포트 설정
  serverAddress: localhost


serverName: local_server
---
spring:
  config:
    activate:
      on-profile: blue
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: "http://3.37.250.123:8080/api/login/oauth2/code/{registrationId}"
          github:
            redirect-uri: "http://3.37.250.123:8080/api/login/oauth2/code/{registrationId}"
          kakao:
            redirect-uri: "http://3.37.250.123:8080/api/login/oauth2/code/{registrationId}"



#  # MySQL 연결 설정
#  datasource:
#    url: jdbc:mysql://3.37.250.123:3306/gather_mind_db  # Docker 컨테이너의 MySQL 호스트명
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: root
#    password: 61234  # Docker에서 설정한 비밀번호
#    hikari:
#      minimum-idle: 5
#      maximum-pool-size: 20
#      pool-name: HikariCP
#
#  jpa:
#    hibernate:
#      ddl-auto: update  # 애플리케이션 시작 시 테이블 자동 생성
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQL8Dialect
#        format_sql: true

  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL
    driver-class-name: org.h2.Driver
    username: sa
    password: 51234   # 비밀번호를 설정하거나 빈 문자열로 두기
  h2:
    console:
      enabled: true  # H2 콘솔 활성화
      path: /h2-console  # H2 콘솔 경로 (기본: /h2-console)
      settings:
        web-allow-others: true

server:
  port: 8080  # 서버 포트 설정
  serverAddress: 3.37.250.123


serverName: blue_server
---
spring:
  config:
    activate:
      on-profile: green
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: "http://3.37.250.123:8081/api/login/oauth2/code/{registrationId}"
          github:
            redirect-uri: "http://3.37.250.123:8081/api/login/oauth2/code/{registrationId}"
          kakao:
            redirect-uri: "http://3.37.250.123:8081/api/login/oauth2/code/{registrationId}"


server:
  port: 8081  # 서버 포트 설정
  serverAddress: 3.37.250.123


serverName: green_server
---

spring:
  config:
    activate:
      on-profile: common

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            scope: openid, profile, email
            client-authentication-method: post
          github:
            client-id: ${OAUTH2_GITHUB_CLIENT_ID}
            client-secret: ${OAUTH2_GITHUB_CLIENT_SECRET}
            scope: user:email, read:user # 사용자 정보 읽기 권한
            client-authentication-method: post
            authorization-grant-type: authorization_code
          kakao: # 카카오 추가
            client-id: ${OAUTH2_KAKAO_CLIENT_ID} # 카카오 REST API 키
            client-authentication-method: post
            authorization-grant-type: authorization_code
            scope: profile_nickname # 카카오 사용자 정보 권한
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id # GitHub의 사용자 고유 ID 필드
          kakao: # 카카오 제공자 설정
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL
    driver-class-name: org.h2.Driver
    username: sa
    password: 51234   # 비밀번호를 설정하거나 빈 문자열로 두기
  h2:
    console:
      enabled: true  # H2 콘솔 활성화
      path: /h2-console  # H2 콘솔 경로 (기본: /h2-console)
      settings:
        web-allow-others: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: test
    password: ldefurjjanpjgjri
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true


logging:
  level:
    root: INFO
    woongjin.gatherMind: DEBUG

#    org:
#      hibernate:
#        SQL: DEBUG
#        type:
#          descriptor:
#            sql:
#              BasicBinder: TRACE